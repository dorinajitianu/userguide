<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE topic PUBLIC "-//OASIS//DTD DITA Topic//EN" "topic.dtd">
<topic id="webapp-integrate-github-plugin">
  <title>Integrating Web Author with Git (GitHub, GitLab, Bitbucket)</title>
  <prolog>
    <metadata>
      <keywords>
        <indexterm>Git repository support<indexterm>Configuring GitHub
          integration</indexterm></indexterm>
        <indexterm>Git repository support<indexterm>Configuring GitLab
          integration</indexterm></indexterm>
        <indexterm>Git repository support<indexterm>Configuring Bitbucket
          integration</indexterm></indexterm>
      </keywords>
    </metadata>
  </prolog>
  <body>
    <p><ph keyref="webappProduct"/> includes a built-in <uicontrol>Git Plugin</uicontrol> that
      allows you to edit files stored in a Git repository (with GitHub, GitLab, and Bitbucket
      integrations). The <uicontrol>Git Plugin</uicontrol> allows you to access repositories simply
      by using your GitHub, GitLab, or Bitbucket login credentials.</p>
    <section id="github_integration">
      <title>GitHub Integration</title>
      <p>You can configure your Git <term>plugin</term> to allow <term>OAuth 2.0</term>
        authentication for GitHub integrations to access files stored in a public or private
        repository. You will then have access to a <uicontrol>Login with GitHub</uicontrol> button
        in the <uicontrol>Git Login</uicontrol> dialog box. You can configure your integration
        either by using <i>github.com</i> or with a <i>GitHub Enterprise</i> deployment.</p>
      <p>
        <fig>
          <title>GitHub Login Dialog Box</title>
          <image href="../img/WA_git_login.png"/>
        </fig>
      </p>
      <p><u><b>Configuring a Git Integration with <i>github.com</i></b></u></p>
      <p>To configure your Git integration using <i>github.com</i>, follow this procedure:<ol>
          <li>Log in to GitHub and register a new OAuth application at <xref
              href="https://github.com/settings/applications/new" format="html" scope="external"/>.<ol>
              <li>Complete the form.</li>
              <li>The <uicontrol>Authorization callback URL</uicontrol> field should include the
                following path:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/github-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
            </ol></li>
          <li>Click on <uicontrol>Register application</uicontrol> to obtain the <uicontrol>Client
              ID</uicontrol> and <uicontrol>Client Secret</uicontrol> credentials (they are
            displayed at the top-right section of the resulting page).</li>
          <li>Set your <uicontrol>Client ID</uicontrol> and <uicontrol>Client Secret</uicontrol>
            credentials in your <term>plugin</term> configuration by doing the following:<ol>
              <li>Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li>
                <p>In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_vc3_sc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>GitHub</uicontrol> tab.</p>
                <p>
                  <fig>
                    <title>GitHub Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_GitHub_config.png"/>
                  </fig>
                </p>
              </li>
              <li>Enter the <uicontrol>Client ID</uicontrol> and <uicontrol>Client
                  Secret</uicontrol> in the <uicontrol>Plugin configuration</uicontrol> dialog
                box.</li>
              <li>Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p><b>Result:</b> You now have access to the <uicontrol>Login with GitHub</uicontrol> button
        in the <uicontrol>Git Login</uicontrol> dialog box.</p>
      <p><u><b>Configuring a Git Integration with a <i>GitHub Enterprise</i> Deployment</b></u></p>
      <p>To configure your Git integration using a <i>GitHub Enterprise</i> deployment, follow this procedure:<ol>
          <li>Log in to GitHub Enterprise and register a new developer application. The URL is:
              <filepath>[GithubEnterpriseUrl]/settings/applications/new</filepath>.<ol>
              <li>Complete the form.</li>
              <li>The <uicontrol>Authorization callback URL</uicontrol> field should include the
                following path:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/github-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
            </ol></li>
          <li>Obtain the <uicontrol>Client ID</uicontrol> and <uicontrol>Client Secret</uicontrol>
            credentials at: <filepath>[GithubEnterpriseUrl]/settings/developers</filepath>.</li>
          <li>Set the <uicontrol>Client ID</uicontrol>, <uicontrol>Client Secret</uicontrol>, and
            the <uicontrol>API URL</uicontrol> in your <term>plugin</term> configuration by doing
            the following:<ol>
              <li>Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li>
                <p>In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_fxz_sc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term>, select the
                    <uicontrol>GitHub</uicontrol> tab, and select the <uicontrol>Use GitHub
                    Enterprise</uicontrol> option.</p>
                <p>
                  <fig>
                    <title>GitHub Enterprise Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_GitHub_Ent_config.png"/>
                  </fig>
                </p>
              </li>
              <li>Enter the <uicontrol>API URL</uicontrol>, <uicontrol>Client ID</uicontrol>, and
                  <uicontrol>Client Secret</uicontrol> in the <uicontrol>Plugin
                  configuration</uicontrol> dialog box. The <uicontrol>API URL</uicontrol> is the
                URL of your GitHub Enterprise deployment
                (<filepath>[GithubEnterpriseUrl]</filepath>).</li>
              <li>Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p><b>Result:</b> You now have access to the <uicontrol>Login with GitHub</uicontrol> button
        in the <uicontrol>Git Login</uicontrol> dialog box.<note>If your <i>GitHub Enterprise</i>
          deployment uses self-signed HTTPS certificates, <ph keyref="webappProduct"/> must be
          configured to <xref
            href="webapp-admin-page.dita#webapp-admin-page/accept-security-certificate"
            >automatically accept the security certificate</xref>.</note></p>
    </section>
    <section id="gitlab_integration">
      <title>GitLab Integration</title>
      <p>You can configure your Git <term>plugin</term> to allow <term>OAuth 2.0</term>
        authentication for GitLab integrations to access files stored in a public or private
        repository. You will then have access to a <uicontrol>Login with GitLab</uicontrol> button
        in the <uicontrol>Git Login</uicontrol> dialog box. You can configure your integration
        either by using a <i>GitLab</i> or <i>GitLab On-Premise</i> deployment.</p>
      <p>
        <fig>
          <title>GitLab Login Dialog Box</title>
          <image href="../img/WA_gitlab_login.png"/>
        </fig>
      </p>
      <p><u><b>Configuring a Git Integration with <i>GitLab</i></b></u></p>
      <p>To configure your Git integration using <i>GitLab</i>, follow this procedure:<ol>
          <li>Sign in or register at <xref href="https://gitlab.com/profile/applications"
              format="html" scope="external"/>.</li>
          <li>Go to <uicontrol>Applications</uicontrol> and authorize Web Author to obtain the
            configuration parameters.<ol>
              <li>The <uicontrol>Redirect URI</uicontrol> should be set as:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li>For the <uicontrol>Scopes</uicontrol>, select: <b>api</b>, and
                <b>read_user</b>.</li>
            </ol></li>
          <li>Set your credentials and redirect URI in your <term>plugin</term> configuration by
            doing the following:<ol>
              <li>Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li>
                <p>In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_afm_tc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>GitLab</uicontrol> tab.</p>
                <p>
                  <fig>
                    <title>GitLab Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Gitlab_config.png"/>
                  </fig>
                </p>
              </li>
              <li>Enter the <uicontrol>Application ID</uicontrol> and <uicontrol>Secret</uicontrol>
                credentials.</li>
              <li>The <uicontrol>Redirect URI</uicontrol> must be set to:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li>Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p><b>Result:</b> You now have access to the <uicontrol>Login with GitLab</uicontrol> button
        in the <uicontrol>Git Login</uicontrol> dialog box.</p>
      <p id="GitLab-on-premise-deployment"><u><b>Configuring a Git Integration with a <i>GitLab
              On-Premise</i> Deployment</b></u></p>
      <p>To configure your Git integration using a <i>GitLab On-Premise</i> deployment, follow this procedure:<ol>
          <li>Sign in to GitLab
            (<filepath>[GitLabOnPremiseUrl]/profile/applications</filepath>).</li>
          <li>Go to <uicontrol>Applications</uicontrol> and authorize Web Author to obtain the
            configuration parameters.<ol>
              <li>The <uicontrol>Redirect URI</uicontrol> should be set as:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-e-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li>For the <uicontrol>Scopes</uicontrol>, select: <b>api</b>, and
                <b>read_user</b>.</li>
            </ol></li>
          <li>Set your credentials, API URI, and redirect URI in your <term>plugin</term>
            configuration by doing the following:<ol>
              <li>Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li>
                <p>In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_awz_tc5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>GitLab on-premise</uicontrol> tab.</p>
                <p>
                  <fig>
                    <title>GitLab On-Premise Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Gitlab_OP_config.png"/>
                  </fig>
                </p>
              </li>
              <li>Enter the <uicontrol>Application ID</uicontrol> and <uicontrol>Secret</uicontrol>
                credentials.</li>
              <li>Set the <uicontrol>API URI</uicontrol> to match the location where your GitLab
                instance is deployed.</li>
              <li>The <uicontrol>Redirect URI</uicontrol> must be set to:
                  <filepath>[OXYGEN_WEBAUTHOR_URL]/plugins-dispatcher/gitlab-e-oauth/callback</filepath>,
                where [OXYGEN_WEBAUTHOR_URL] is the location where Web Author is deployed (for
                example, <filepath>http://Your-Domain:8077/apps/webauthor</filepath>).</li>
              <li>Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p><b>Result:</b> You now have access to the <uicontrol>Login with GitLab</uicontrol> button
        in the <uicontrol>Git Login</uicontrol> dialog box.<note type="important"><ph
            keyref="webappProduct"/> uses the <xref
            href="https://docs.gitlab.com/ee/api/README.html" format="html" scope="external">GitLab
            web API</xref> to edit repositories and Git over HTTPS for actions that are not
          available using the web API. Therefore, your <i>GitLab On-Premise</i> deployment will not
          work with <ph keyref="webappProduct"/> if you disable Git over HTTPS in your
          deployment.</note><note>If your <i>GitLab On-Premise</i> deployment uses self-signed HTTPS
          certificates, <ph keyref="webappProduct"/> must be configured to <xref
            href="webapp-admin-page.dita#webapp-admin-page/accept-security-certificate"
            >automatically accept the security certificate</xref>.</note></p>
    </section>
    <section id="section_znr_ggh_1jb">
      <title>GitLab On-Premise Known Issues</title>
      <p><u><b>Reverse Proxy Server in Front of <i>GitLab On-Premise</i></b></u></p>
      <p>If you have a reverse proxy in front of your <i>GitLab On-Premise</i> instance, make sure
        that requests are forwarded to the GitLab instance exactly as they are received.</p>
      <p>A common problem occurs when using Apache as a reverse proxy in front of GitLab when it is
        configured to not allow encoded slashes in URLs. Apache decodes the encoded slashes and
        sends the malformed request to GitLab.</p>
      <p><u><b>External URL Configured Incorrectly for <i>GitLab On-Premise</i></b></u></p>
      <p><i>GitLab On-Premise</i> needs to know the URL that is used to reach it. Make sure this URL
        is the same as the URL written in the API URI field of the <xref
          href="#webapp-integrate-github-plugin/GitLab-on-premise-deployment" format="dita">GitLab
          Plugin Configuration dialog box</xref>.</p>
    </section>
    <section id="gitlab_submodules">
      <title>GitLab Submodules</title>
      <p>You can configure your Git <term>plugin</term> to support GitLab submodules. To enable this
        support, follow these steps:<ol>
          <li>Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                ><uicontrol>Administration Page</uicontrol></xref>.</li>
          <li>
            <p>In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                  href="../img/ConfigureSearchScope16.png" id="image_l3m_5c5_53b"
                />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                <uicontrol>Git</uicontrol> tab.</p>
            <p>
              <fig>
                <title>GitLab Submodule Support</title>
                <image href="../img/WA_Git_config.png"/>
              </fig>
            </p>
          </li>
          <li>Select the <uicontrol>Enable Git submodules support</uicontrol> option.<note>The
                <uicontrol>Disable Generic Git</uicontrol> option can be used to remove the generic
              Git button from the Web Author dashboard.</note></li>
          <li>Click <uicontrol>Apply</uicontrol>.</li>
        </ol></p>
      <p><b>Result:</b> You now have access to browse or edit files from GitLab submodules.</p>
    </section>
    <section id="bitucket_integration">
      <title>Bitbucket Integration</title>
      <p>You can configure your Git <term>plugin</term> to allow <term>OAuth 2.0</term>
        authentication for Bitbucket integrations to access files stored in a public or private
        repository. You will then have access to a <uicontrol>Login with Bitbucket</uicontrol>
        button in the <uicontrol>Git Login</uicontrol> dialog box.</p>
      <p>
        <fig>
          <title>Bitbucket Login Dialog Box</title>
          <image href="../img/WA_bitbucket_login.png"/>
        </fig>
      </p>
      <p>To configure your Git integration using <i>Bitbucket</i>, follow this procedure:<ol>
          <li>Log in to the Bitbucket and go to the user settings page ( <xref
              href="https://bitbucket.org/account" format="html" scope="external"/>).</li>
          <li>Go to go to the <uicontrol>OAuth</uicontrol> page and click <uicontrol>Add
              consumer</uicontrol> to obtain the <uicontrol>Key</uicontrol> and
              <uicontrol>Secret</uicontrol> credentials.</li>
          <li>Set your credentials in your <term>plugin</term> configuration by doing the following:<ol>
              <li>Go to the <xref href="../topics/webapp-admin-page.dita#webapp-admin-page"
                    ><uicontrol>Administration Page</uicontrol></xref>.</li>
              <li>
                <p>In the <uicontrol>Plugins</uicontrol> section, click on the <uicontrol><image
                      href="../img/ConfigureSearchScope16.png" id="image_ofz_5c5_53b"
                    />Configure</uicontrol> icon for the Git <term>plugin</term> and select the
                    <uicontrol>Bitbucket</uicontrol> tab.</p>
                <p>
                  <fig>
                    <title>Bitbucket Plugin Configuration Dialog Box</title>
                    <image href="../img/WA_Bitbucket_config.png"/>
                  </fig>
                </p>
              </li>
              <li>Enter the <uicontrol>Key</uicontrol> and <uicontrol>Secret</uicontrol>
                credentials.</li>
              <li>Click <uicontrol>Apply</uicontrol>.</li>
            </ol></li>
          <li><xref href="webauthor-restart.dita">Restart <ph keyref="webappProduct"/></xref>.</li>
        </ol></p>
      <p><b>Result:</b> You now have access to the <uicontrol>Login with Bitbucket</uicontrol>
        button in the <uicontrol>Git Login</uicontrol> dialog box.</p>
    </section>
    <section id="custom_options_for_the_git_plugin">
      <title>Custom Options for the Git Plugin</title>
      <p>It is possible to configure a master account for the Git connector so that users do not
        have to login to edit documents. The following options can be set in the <xref
          href="customizing-options.dita#customizing-options"><ph keyref="webappProduct"/>
          <filepath>options.xml</filepath> file</xref>.<ul>
          <li><b>PLUGIN_CUSTOM_OPTIONS.git.enforced_user</b></li>
          <li><b>PLUGIN_CUSTOM_OPTIONS.git.enforced_pass</b></li>
          <li><b>PLUGIN_CUSTOM_OPTIONS.git.enforced_mail</b></li>
        </ul></p>
      <p><b>Example:</b> The <filepath>options.xml</filepath> file would look like
        this:<codeblock outputclass="language-xml">&lt;entry>
  &lt;String>PLUGIN_CUSTOM_OPTIONS.git.enforced_user&lt;/String>
  &lt;String>example_username&lt;/String>
&lt;/entry>
&lt;entry>
  &lt;String>PLUGIN_CUSTOM_OPTIONS.git.enforced_pass&lt;/String>
  &lt;String>example_password&lt;/String>
&lt;/entry>
&lt;entry>
  &lt;String>PLUGIN_CUSTOM_OPTIONS.git.enforced_mail&lt;/String>
  &lt;String>mail@example.com&lt;/String>
&lt;/entry></codeblock></p>
    </section>
  </body>
  <related-links product="webauthor">
    <linklist>
      <title>Related Information:</title>
      <link href="using-webapp-github.dita"/>
    </linklist>
  </related-links>
</topic>
